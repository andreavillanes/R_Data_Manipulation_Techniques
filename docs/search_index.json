[["programming-fundamentals.html", "Chapter 3 Programming Fundamentals 3.1 Logicals 3.2 Conditionals 3.3 Functions 3.4 Loops 3.5 Vectorization", " Chapter 3 Programming Fundamentals 3.1 Logicals A logical is a binary representation of True and False: &gt; a &lt;- TRUE &gt; &gt; b &lt;- FALSE &gt; &gt; typeof(b) Logicals are used for evaluating comparisons, such as: &gt; #equality &gt; # note the double equals == operator is a logical comparison, opposed to a single equal = being an assignment &gt; &gt; 2==2 &gt; typeof(2==2) &gt; &gt; &#39;cat&#39; == &#39;dog&#39; &gt; &gt; &#39;cat&#39; == &#39;cat&#39; &gt; &gt; #Not equal operator &gt; 2!=2 &gt; &gt; # greater than/less than &gt; 2&gt;2 &gt; &gt; 2&gt;=2 &gt; &gt; 2&lt;1 &gt; &gt; 2&lt;=1 &gt; &gt; # Null Values &gt; V1 &lt;- 1 &gt; V1[10] &lt;- 10 &gt; &gt; is.na(V1) &gt; !is.na(V1) &gt; &gt; # Contained within set &gt; V1 &gt; &gt; 1 %in% V1 &gt; 10 %in% V1 &gt; 2 %in% V1 &gt; &gt; &gt; c(1,2) %in% V1 &gt; &gt; # If we want not in, then use the not ! operator around the entire statement &gt; !(1 %in% V1) &gt; &gt; # Note, logicals can be used with other data types as well &gt; a &lt;- c(1,2,3,4,5) &gt; a &lt;= 1 &gt; &gt; b &lt;- c(1,2,7,9,5) &gt; a == b &gt; a != b &gt; &gt; A &lt;- matrix(1:10,2,5) &gt; B &lt;- matrix(seq(1,20,2),2,5) &gt; &gt; A == B &gt; A != B &gt; &gt; identical(a,b) &gt; identical(A,B) &gt; &gt; all.equal(A,B) 3.2 Conditionals 3.3 Functions 3.4 Loops 3.5 Vectorization "]]
